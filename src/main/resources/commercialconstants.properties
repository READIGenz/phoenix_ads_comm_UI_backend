# Success and Error Messages
success.message=Success! Your file for submission to the CICs has been generated.
error.loading.configuration=Error loading configuration:
error.loading.headseg.properties=Error loading headSeg.properties:
error.running.jar=Error running the JAR file.
error.executing.jar=Error executing the JAR file:

# Header and File Names
header.seg.cycle.date.reported=header.seg.cycle.date.reported
application.properties.filename=application.properties
headSeg.properties.filename=headSeg.properties
java.command=java
jar.option=-jar

# Datasource Properties
spring.datasource.url.property=spring.datasource.url
spring.datasource.username.property=spring.datasource.username
spring.datasource.password.property=spring.datasource.password
spring.jpa.hibernate.ddl-auto.property=spring.jpa.hibernate.ddl-auto

# Procedure Constants
truncate.and.drop.proc=TruncateAndDropTables
drop.duplicate.procedure.sql=DROP PROCEDURE IF EXISTS DuplicateTables
move.data.proc=MoveDataToTables
truncate.sql.path=/SQL/truncateall.sql
migrate.sql.path=/SQL/migrate_data.sql
log.file.path=logFilePath
queries.properties.file=/SQL/queries.properties
count.query=SELECT COUNT(*) FROM 
duplicate.table.sql.path=/SQL/duplicateTable.sql
app.drop-backup-path=/SQL/dropBackupTables.sql
drop.query=DROP PROCEDURE IF EXISTS 
duplicate.tables.procedure.call={call DuplicateTables(?)}

# Table Names
borrower.seg.table=borrower_seg
address.seg.commercial.table=address_seg_commercial
credit.facility.seg.table=credit_facility_seg
dishonour.of.cheque.seg.table=dishonour_of_cheque_seg
guarantor.seg.table=gurantor_seg
relationship.seg.table=relationship_seg
security.seg.table=security_seg

# Encoding
encoding.utf8=UTF-8

# Environment Variable Constants
spring.datasource.env.url=SPRING_DATASOURCE_URL
spring.datasource.env.username=SPRING_DATASOURCE_USERNAME
spring.datasource.env.password=SPRING_DATASOURCE_PASSWORD
spring.jpa.hibernate.ddl-auto.env=SPRING_JPA_HIBERNATE_DDL_AUTO
app.truncate.create.table.procedure=TruncateOrCreateStatusTable
app.truncate.create.table.path=/SQL/turcateTable.sql
app.duplicate-table-path=/SQL/duplicateTable.sql

app.drop-backup-procedure=DropBackUpTables
drop.procedure.template=DROP PROCEDURE IF EXISTS %s

app.duplicate-tables-procedure=DuplicateTables
call.procedure.template={call %s}
app.count-rows-table=CountRowsInTable
app.count-rows-table-path=/SQL/count_rows.sql
app.status-table=status_commercial
call.procedure.procedure.template={CALL %s(?)}
sql.truncate.table=TRUNCATE TABLE %s

segment.borrower=Borrower Segement       : 
segment.address=Address Segement        : 
segment.creditfacility=CreditFacility Segement : 
segment.dishonour=Dishonour Segement      : 
segment.guarantor=Gurantor Segement       : 
segment.relationship=Relationship Segement   : 
segment.security=Security Segement       : 


# Procedures Path
migrate.sql.borrower=/SQL/borrowersegmentProc.sql
migrate.sql.address=/SQL/addresssegmentProc.sql
migrate.sql.creditfacility=/SQL/creditfacilitysegmentProc.sql
migrate.sql.dishonour=/SQL/dishonourofChequeProc.sql
migrate.sql.guarantor=/SQL/gurantorSegmentProc.sql
migrate.sql.relationship=/SQL/relationshipsegmentProc.sql
migrate.sql.security=/SQL/securitysegmentProc.sql

# Corresponding procedure names
procedure.name.borrower=BorrowerSegmentProcedure
procedure.name.address=AddressSegmentCommercialProcedure
procedure.name.creditfacility=CreditFacilitySegCommercialProcedure
procedure.name.dishonour=DishonourOfChequeSegCommercialProcedure
procedure.name.guarantor=GuarantorSegmentCommercialProcedure
procedure.name.relationship=RelationshipSegCommercialProcedure
procedure.name.security=SecuritySegmentProcedure


line.break=<br>
